version: 2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

attach_workspace: &attach_workspace
  attach_workspace:
    at: /home/circleci/project

defaults:
  - &test_defaults
    docker:
      - image: circleci/python:2.7
      - image: rabbitmq:3.7.4
    steps:
      - checkout
      - run:
          name: Install tox, NOTICE we use an old version of tox because of CFY-6398 (relying dict ordering)
          command: sudo pip install tox==1.6.1
      - run:
          name: Run tox of specfic environment
          command: tox -e $DO_ENV

  - &test_defaults_for_python26
    docker:
      - image: circleci/python:2.7
      - image: rabbitmq:3.7.4
    steps:
      - checkout
      - run:
          name: Install and set python version with pyenv
          command: |
                   git clone https://github.com/yyuu/pyenv.git ~/.pyenv
                   export PYENV_ROOT="$HOME/.pyenv"
                   export PATH="$PYENV_ROOT/bin:$PATH"
                   sudo apt-get install -y build-essential libssl1.0-dev zlib1g-dev xz-utils
                   pyenv install 2.6.9
                   pyenv local 2.6.9
      - run:
          name: Install tox, NOTICE we use an old version of tox because of CFY-6398 (relying dict ordering)
          command: sudo pip install tox==1.6.1 tox-pyenv
      - run:
          name: Run tox of specfic environment
          command: tox -e $DO_ENV

  - &docs_defaults
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run:
          name: Install tox, NOTICE we use an old version of tox because of CFY-6398 (relying dict ordering)
          command: sudo pip install tox==1.6.1
      - run:
          name: Run tox of specfic environment
          command: tox -e $DO_ENV
      - persist_to_workspace:
              root: /home/circleci/project
              paths: #circleci can only handle fixed paths currently
                - docs

  - &deploy_defaults
    docker:
      - image: circleci/python:2.7
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - *attach_workspace
      - run:
          name: Deploy to S3
          command: |
                    aws s3 sync $DOCS_PATH s3://$DOCS_PATH_IN_S3 --delete --acl public-read

jobs:
  flake8:
    <<: *test_defaults
    environment:
      DO_ENV: flake8

  test_py27_dsl_parser:
    <<: *test_defaults
    environment:
      DO_ENV: py27_dsl_parser

  test_py27_script_plugin:
    <<: *test_defaults
    environment:
      DO_ENV: py27_script_plugin

  test_py27_plugins_common:
    <<: *test_defaults
    environment:
      DO_ENV: py27_plugins_common

  test_py26_dsl_parser:
    <<: *test_defaults_for_python26
    environment:
      DO_ENV: py26_dsl_parser

  test_py26_script_plugin:
    <<: *test_defaults_for_python26
    environment:
      DO_ENV: py26_script_plugin

  test_py26_plugins_common:
    <<: *test_defaults_for_python26
    environment:
      DO_ENV: py26_plugins_common

  docs_plugins_common:
    <<: *docs_defaults
    environment:
      DO_ENV: docs_plugins_common

  docs_rest_client:
    <<: *docs_defaults
    environment:
      DO_ENV: docs_rest_client

  deploy_docs_plugins_common:
    <<: *deploy_defaults
    environment:
      DOCS_PATH: docs/cloudify_plugins_common/_build/html
      DOCS_PATH_IN_S3: docs.cloudify.co/cloudify-plugins-common/

  deploy_docs_rest_client:
    <<: *deploy_defaults
    environment:
      DOCS_PATH: docs/cloudify_rest_client/_build/html
      DOCS_PATH_IN_S3: docs.cloudify.co/cloudify-rest-client/

workflows:
  version: 2

  build_and_test:
    jobs:
      - flake8
      - test_py27_dsl_parser
      - test_py27_script_plugin
      - test_py27_plugins_common
      - test_py26_dsl_parser
      - test_py26_script_plugin
      - test_py26_plugins_common
      - docs_plugins_common
      - docs_rest_client
      - deploy_docs_plugins_common:
          requires:
              - docs_plugins_common
          filters:
            branches:
              only: master
      - deploy_docs_rest_client:
          requires:
              - docs_rest_client
          filters:
            branches:
              only: master
